name: Deploy to GitHub Pages

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          lfs: true

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: |
          echo "Building application with LFS files available..."
          git lfs install
          git lfs pull
          npm run build
        env:
          NODE_ENV: production
          GITHUB_PAGES: true

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Verify built files
        run: |
          echo "Checking built application for LFS files:"
          find ./build -name "*.png" -o -name "*.pdf" | head -10
          echo "Build directory contents:"
          ls -la ./build/client

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: "./build/client"

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
